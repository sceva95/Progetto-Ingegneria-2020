package com.example.prova.view;

import com.example.prova.model.*;
import org.jboss.jandex.Main;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.NoSuchElementException;

public class MainWindowLoggato extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    private MainWindow main;
    private List<Libro> libri = new ArrayList<>();
    private double prezzoTotale = 0;
    private String resoconto ="";
    private int puntiTotali = 0;

    public MainWindowLoggato(MainWindow main) {
        this.main = main;
        initComponents();
        updateTable();
        aggiornaContatti();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        libriSelezionatiTabella = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        resocontoTextArea = new javax.swing.JTextArea();
        ordinaButton = new javax.swing.JButton();
        rimuoviButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        genereBox = new javax.swing.JComboBox<>();
        genereButton = new javax.swing.JButton();
        aggiungiButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        pagamentoBox = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        indirizzoBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        accountButton = new javax.swing.JButton();
        logoutButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        libriTabella = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Libreria");
        setPreferredSize(new java.awt.Dimension(1350, 600));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 989, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );

        libriSelezionatiTabella.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Titolo", "Autore", "Casa_editrice", "ISBN", "Prezzo", "Punti"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        jScrollPane2.setViewportView(libriSelezionatiTabella);

        resocontoTextArea.setColumns(20);
        resocontoTextArea.setRows(5);
        resocontoTextArea.setEditable(false);
        jScrollPane3.setViewportView(resocontoTextArea);

        ordinaButton.setText("Ordina");
        ordinaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ordinaButtonActionPerformed(evt);
            }
        });

        rimuoviButton.setText("Rimuovi");
        rimuoviButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rimuoviButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("GENERE:");

        genereBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TUTTI", "NARRAZIONE", "AVVENTURA", "NOVITA", "RAGAZZI" }));


        genereButton.setText("Visualizza Classifica");
        genereButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genereButtonActionPerformed(evt);
            }
        });

        aggiungiButton.setText("Aggiungi");
        aggiungiButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aggiungiButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel3.setText("CARRELLO");

        pagamentoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CARTA DI CREDITO", "PAYPAL", "CONTRASSEGNO" }));
        pagamentoBox.setToolTipText("");

        jLabel4.setText("TIPO DI PAGAMENTO:");

        indirizzoBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));


        jLabel5.setText("INDIRIZZO DI SPEDIZIONE:");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(rimuoviButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(36, 36, 36)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(indirizzoBox, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(33, 33, 33))
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(170, 170, 170))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                                        .addComponent(pagamentoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(ordinaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(29, 29, 29)))
                                        .addComponent(jLabel4)))
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(genereBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(genereButton)
                                .addGap(216, 216, 216)
                                .addComponent(aggiungiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {aggiungiButton, rimuoviButton});

        jPanel8Layout.setVerticalGroup(
                jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(genereBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(genereButton)
                                        .addComponent(aggiungiButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(2, 2, 2)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jScrollPane3)
                                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                                .addGap(0, 0, Short.MAX_VALUE)
                                                                .addComponent(jLabel3)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(12, 12, 12)))
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(rimuoviButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                                .addComponent(jLabel4)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(pagamentoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(30, 30, 30))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                                .addGap(18, 18, 18)
                                                                .addComponent(ordinaButton))
                                                        .addGroup(jPanel8Layout.createSequentialGroup()
                                                                .addGap(11, 11, 11)
                                                                .addComponent(indirizzoBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(20, 20, 20))))
        );

        jPanel8Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {aggiungiButton, rimuoviButton});

        accountButton.setText("ACCOUNT");
        accountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountButtonActionPerformed(evt);
            }
        });

        logoutButton.setText("LOGOUT");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(logoutButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(accountButton, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addComponent(accountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(48, 48, 48)
                                .addComponent(logoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        libriTabella.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null},
                        {null, null, null, null, null, null, null, null, null, null, null}
                },
                new String [] {
                        "Titolo", "Autore", "Casa Editrice", "Anno", "Genere", "Prezzo", "Descrizione", "ISBN", "Punti", "Posizione", "Settimane"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        });
        jScrollPane1.setViewportView(libriTabella);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel2.setText("CATALOGO LIBRI");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(0, 43, Short.MAX_VALUE))
                                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                                .addContainerGap()
                                                                                .addComponent(jScrollPane1)))
                                                                .addGap(18, 18, 18))
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addContainerGap()
                                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(10, 10, 10)
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>

    private void ordinaButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String pagamento = pagamentoBox.getSelectedItem().toString();
        Ordine nuovo = new Ordine();
        List<Libro> libri = new ArrayList<>();
        //inizializzo la lista con i libri aggiunti
        DefaultTableModel dm = (DefaultTableModel) libriSelezionatiTabella.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            try {
                String isbn = (String) libriSelezionatiTabella.getValueAt(i, 3);
                String genere = main.getController().getLibroController().findById(isbn).getGenere();
                double prezzo = (Double) libriSelezionatiTabella.getValueAt(i, 4);
                int punti = (Integer) libriSelezionatiTabella.getValueAt(i, 5);
                Libro libro = new Libro();
                libro.setIsbn(isbn);
                libro.setGenere(genere);
                libro.setPrezzo(prezzo);
                libro.setPunti(punti);
                libri.add(libro);
            }catch(Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Qualcosa è andato storto!");
                return;
            }
        }

        //effettuo l'ordine
        int punti = 0;
        double prezzo = 0;

            //salvo l'ordine principale
            pagamento=pagamentoBox.getSelectedItem().toString();
            nuovo.setEmail(main.getUtenteCorrente().getEmail());
            nuovo.setPagamento(pagamento);
            nuovo.setData(new java.sql.Date(new Date().getTime()));
            nuovo.setStato("IN PREPARAZIONE");
            for(Libro tmp: libri){
                prezzo+=tmp.getPrezzo();
                punti+=tmp.getPunti();
            }
            nuovo.setCosto(prezzo);
            nuovo.setPunti(punti);
            //aggiungi i punti all'utente
            Utente utente = new Utente();
            utente = main.getUtenteCorrente();
            utente.setLibroCardPunti(utente.getLibroCardPunti() + punti);
            main.getController().getUtenteController().save(utente);
            main.getController().getOrdineController().save(nuovo);

            //salvo i libri dell'ordine
            OrdineLibro ordineLibro = new OrdineLibro();
            ordineLibro.setQuantita(0);
            OrdineLibroId ordineLibroId = new OrdineLibroId();
            ordineLibroId.setId(nuovo.getIdentificativo());
            try{
                for(Libro tmp: libri){
                ordineLibroId.setIsbn(tmp.getIsbn());
                ordineLibro.setId(ordineLibroId);

                //se c'è un solo libro
                try{
                    main.getController().getOrdineLibroController().findById(ordineLibroId);

                }catch(Exception e){
                    ordineLibro.setQuantita(1);
                    main.getController().getOrdineLibroController().save(ordineLibro);
                    Libro libro = new Libro();
                    libro =main.getController().getLibroController().findById(tmp.getIsbn());
                    libro.setVendite(libro.getVendite() + 1);
                    main.getController().getLibroController().aggiungi(libro);
                    continue;
                }

                //se ci sono piu libri
                OrdineLibro old = new OrdineLibro();
                old = main.getController().getOrdineLibroController().findById(ordineLibroId);
                ordineLibro.setQuantita(old.getQuantita() + 1);

                main.getController().getOrdineLibroController().save(ordineLibro);
                Libro libro = new Libro();
                libro =main.getController().getLibroController().findById(tmp.getIsbn());
                libro.setVendite(libro.getVendite() + 1);
                main.getController().getLibroController().aggiungi(libro);
            }
        }catch(Exception e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Qualcosa è andato storto");
            //rollback
            main.getController().getOrdineController().delete(nuovo);
            return;
        }
        JOptionPane.showMessageDialog(null, "Ordine Effettuato!\nID ordine: " + nuovo.getIdentificativo() + "\nCosto: " + nuovo.getCosto() + "\nPunti: " +nuovo.getPunti() );
        return;

    }

    private void aggiungiButtonActionPerformed(java.awt.event.ActionEvent evt) {
        //aggiungere righe selezionate da tabella libri a tabella selezionati


        TableModel model = libriTabella.getModel();
        int[] indexs = libriTabella.getSelectedRows();
        Object[] row = new Object[6]; //inserire dimensione
        DefaultTableModel model2 = (DefaultTableModel)libriSelezionatiTabella.getModel();
        String text = "";
        for(int i = 0; i < indexs.length; i++){
            row[0] = model.getValueAt(indexs[i], 0); //titolo
            row[1] = model.getValueAt(indexs[i], 1); //autore
            row[2] = model.getValueAt(indexs[i], 2); //casa_editrice
            row[3] = model.getValueAt(indexs[i], 7); //isbn
            row[4] = model.getValueAt(indexs[i], 5); //prezzo
            row[5] = model.getValueAt(indexs[i], 8); //punti
            prezzoTotale+= (Double)model.getValueAt(indexs[i], 5);
            puntiTotali += (Integer) model.getValueAt(indexs[i], 8);
            model2.addRow(row);
        }
        double tot = Math.round(prezzoTotale*100.0)/100.0;
        resoconto = "Dati ordine: \nTotale Libri Inseriti :" + (libriSelezionatiTabella.getRowCount()) +
                "\nPrezzo totale : " + tot + "\nPunti totali:" + puntiTotali;
        resocontoTextArea.setText(resoconto);
    }

    private void rimuoviButtonActionPerformed(java.awt.event.ActionEvent evt) {
        DefaultTableModel dm = (DefaultTableModel) libriSelezionatiTabella.getModel();
        int rowCount = libriSelezionatiTabella.getSelectedRow();
        prezzoTotale -= (Double)libriSelezionatiTabella.getValueAt(rowCount, 4);
        puntiTotali -= (Integer) libriSelezionatiTabella.getValueAt(rowCount, 5);
        dm.removeRow(rowCount);

        double tot = Math.round(prezzoTotale*100.0)/100.0;
        resoconto = "Dati ordine: \nTotale Libri Inseriti :" + (libriSelezionatiTabella.getRowCount()) +
                "\nPrezzo totale : " + tot + "\nPunti totali:" + puntiTotali;
        resocontoTextArea.setText(resoconto);

    }

    private void genereButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String genere = genereBox.getSelectedItem().toString().toUpperCase();
        if(genere.equalsIgnoreCase("tutti")) {
            libri = main.getController().getLibroController().findAll();
            updateTable();
            return;
        }

        libri = main.getController().getLibroController().findByGenereOrdinaPosizione(genere);
        updateTableGenere(genere);
    }

    private void accountButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if(main.getUtenteCorrente().getPermessi().equals("REGISTRATO")){
            new DefaultJDialog(new RegistratoAccount(main), "Account");
            updateTable();
        }else{
           new DefaultJDialog(new AccountResponsabile(main), "Account");
        }
    }

    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {
        main.setUtenteCorrente(null);
        this.setVisible(false);
        main.setVisible(true);
    }

    private void updateTable(){
        this.libri = main.getLibri();
        int count = 0;
        DefaultTableModel dm = (DefaultTableModel) libriTabella.getModel();
        int rowCount = dm.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
        for(Libro tmp: libri){
            dm.addRow(new Object[]{tmp.getTitolo()});
            libriTabella.setValueAt(tmp.getTitolo(), count,0);
            libriTabella.setValueAt(tmp.getAutore(), count,1);
            libriTabella.setValueAt(tmp.getCasaEditrice(), count,2);
            libriTabella.setValueAt(tmp.getAnno(), count,3);
            libriTabella.setValueAt(tmp.getGenere(), count, 4);
            libriTabella.setValueAt(tmp.getPrezzo(), count,5);
            libriTabella.setValueAt(tmp.getDescrizione(), count,6);
            libriTabella.setValueAt(tmp.getIsbn(), count, 7);
            libriTabella.setValueAt(tmp.getPunti(), count, 8);
            libriTabella.setValueAt(tmp.getPosizione(), count,9);
            libriTabella.setValueAt(tmp.getTempo(), count,10);
            count++;
        }
    }

    private void updateTableGenere(String genere){
    int count = 0;
    DefaultTableModel dm = (DefaultTableModel) libriTabella.getModel();
    int rowCount = dm.getRowCount();
    //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
        dm.removeRow(i);
    }
            for(Libro tmp: libri){
        if(tmp.getGenere().equals(genere)) {
            dm.addRow(new Object[]{tmp.getTitolo()});
            libriTabella.setValueAt(tmp.getTitolo(), count, 0);
            libriTabella.setValueAt(tmp.getAutore(), count, 1);
            libriTabella.setValueAt(tmp.getCasaEditrice(), count, 2);
            libriTabella.setValueAt(tmp.getAnno(), count, 3);
            libriTabella.setValueAt(tmp.getGenere(), count, 4);
            libriTabella.setValueAt(tmp.getPrezzo(), count, 5);
            libriTabella.setValueAt(tmp.getDescrizione(), count, 6);
            libriTabella.setValueAt(tmp.getIsbn(), count, 7);
            libriTabella.setValueAt(tmp.getPunti(), count, 8);
            libriTabella.setValueAt(tmp.getPosizione(), count, 9);
            libriTabella.setValueAt(tmp.getTempo(), count, 10);
            count++;
        }
    }

}

    private void aggiornaContatti(){
        Contatto principale = new Contatto();
        ContattoId contattoId = new ContattoId();
        contattoId.setEmail(main.getUtenteCorrente().getEmail());
        contattoId.setIndirizzo(main.getUtenteCorrente().getIndirizzo());
        principale.setId(contattoId);
        principale.setCap(main.getUtenteCorrente().getCap());
        principale.setCitta(main.getUtenteCorrente().getCitta());
        List<Contatto> contatti = new ArrayList<>();
        contatti = main.getController().getContattoController().findByEmail(main.getUtenteCorrente().getEmail());
        contatti.add(0, principale);
        String[] indirizzi = new String[contatti.size()] ;
        int i = 0;
        for(Contatto tmp: contatti){
                indirizzi[i] = tmp.toString();
                i++;
        }
        indirizzoBox.setModel(new javax.swing.DefaultComboBoxModel<>(indirizzi));
    }



    // Variables declaration - do not modify
    private javax.swing.JButton accountButton;
    private javax.swing.JButton aggiungiButton;
    private javax.swing.JComboBox<String> genereBox;
    private javax.swing.JButton genereButton;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable libriSelezionatiTabella;
    private javax.swing.JTable libriTabella;
    private javax.swing.JButton logoutButton;
    private javax.swing.JButton ordinaButton;
    private javax.swing.JTextArea resocontoTextArea;
    private javax.swing.JButton rimuoviButton;
    private javax.swing.JComboBox pagamentoBox;
    private javax.swing.JComboBox indirizzoBox;
    // End of variables declaration
}